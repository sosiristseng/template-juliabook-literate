name: Build notebooks and publish

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPROC: '2'                      # Number of Julia processes to run the notebooks
  DFILE: '.github/Dockerfile'
  IMAGE_NAME: 'app:test'

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache docker image
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/image.tar
          key: ${{ runner.os }}-dockerimage-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dockerimage-
      - name: Load docker image
        run: docker load -i /tmp/image.tar || true
      - name: Build docker image
        run: docker build --cache-from ${{ env.IMAGE_NAME }} -t ${{ env.IMAGE_NAME }} -f ${{ env.DFILE }} .
      - name: Save docker image
        run: docker save -o /tmp/image.tar ${{ env.IMAGE_NAME }}
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Build notebooks with ${{ env.NPROC }} processes
        run: >
          docker run
          --workdir=/work -v ${{ github.workspace }}:/work
          -e JULIA_PROJECT=@.
          ${{ env.IMAGE_NAME }}
          julia --color=yes -p ${{ env.NPROC }} literate.jl
      - name: Build website with Jupyter Book
        run: >
          docker run
          --workdir=/work -v ${{ github.workspace }}:/work
          ${{ env.IMAGE_NAME }}
          jupyter-book build docs/
      - name: Upload artifact for GH pages
        uses: actions/upload-pages-artifact@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          path: docs/_build/html

  deploy:
    name: Deploy to GitHub pages
    needs: CI
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
